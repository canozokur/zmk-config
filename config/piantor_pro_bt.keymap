/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    chosen { zmk,physical-layout = &default_layout; };
};

/ {
    combos {
      compatible = "zmk,combos";
        combo_vm_layer {
            timeout-ms = <30>;
            key-positions = <19 20>;
            bindings = <&mo 3>;
        };
        combo_caps_word {
            timeout-ms = <30>;
            key-positions = <31 32>;
            bindings = <&prog_caps>;
        };
    };
    behaviors {
      hml: hml {
        compatible = "zmk,behavior-hold-tap";
        #binding-cells = <2>;
        label = "HML";
        bindings = <&kp>, <&kp>;
        tapping-term-ms = <200>;
        quick-tap-ms = <175>;
        require-prior-idle-ms = <100>;
        flavor = "balanced";
        hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35>;
        hold-trigger-on-release;
      };
      hmr: hmr {
        compatible = "zmk,behavior-hold-tap";
        #binding-cells = <2>;
        label = "HMR";
        bindings = <&kp>, <&kp>;
        tapping-term-ms = <200>;
        quick-tap-ms = <175>;
        require-prior-idle-ms = <100>;
        flavor = "balanced";
        hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29>;
        hold-trigger-on-release;
      };
      prog_caps: prog_caps {
        compatible = "zmk,behavior-caps-word";
        #binding-cells = <0>;
        continue-list = <UNDERSCORE MINUS>;
      };
    };

    keymap {
        compatible = "zmk,keymap";

        colemak_dh {
            display-name = "colemak";

            bindings = <
              &kp ESCAPE  &kp Q  &kp W  &kp F  &kp P  &kp B  &kp J  &kp L  &kp U  &kp Y  &kp SEMICOLON  &kp BSPC
              &kp TAB  &hml LALT A  &hml LGUI R  &hml LCTRL S  &hml LSHFT T  &kp G  &kp M  &hmr RSHFT N  &hmr RCTRL E  &hmr RGUI I  &hmr RALT O  &kp SINGLE_QUOTE
              &kp LCTRL  &kp X  &kp C  &kp D  &kp V  &kp Z  &kp K  &kp H  &kp COMMA  &kp PERIOD  &kp SLASH  &kp RCTRL
                         &mo 1  &kp SPACE  &mo 2  &kp RET  &kp BACKSPACE  &mo 3
            >;
        };

        number_layer {
            display-name = "number";

            bindings = <
              &kp TAB  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5  &kp N6  &kp N7  &kp N8  &kp N9  &kp N0  &kp BSPC
              &kp LSHFT  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &kp LEFT  &kp UP  &kp DOWN  &kp RIGHT  &trans  &trans
              &kp LCTRL  &bt BT_CLR  &rgb_ug RGB_TOG  &sys_reset  &bootloader  &studio_unlock  &trans  &trans  &trans  &trans  &trans  &trans
                          &kp LGUI  &trans  &kp SPACE  &kp LGUI  &trans  &kp SPACE
            >;
        };

        symbol_layer {
            display-name = "symbol";

            bindings = <
              &kp TAB  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT  &kp CARET  &kp AMPS  &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
              &kp LSHFT  &trans  &trans  &trans  &trans  &trans  &kp MINUS  &kp EQUAL  &kp LBRC  &kp RBRC  &kp BSLH  &kp GRAVE
              &kp LCTRL  &trans  &trans  &trans  &trans  &trans  &kp UNDER  &kp PLUS  &kp LBKT  &kp RBKT  &kp PIPE  &kp TILDE
                        &kp LGUI  &trans  &kp SPACE  &kp RET  &trans  &kp RALT
            >;
        };

        wm_layer {
            display-name = "wm";

            bindings = <
              &kp TAB  &kp LG(N1)  &kp LG(N2)  &kp LG(N3)  &kp LG(N4)  &kp LG(N5)  &kp LG(N6)  &kp LG(N7)  &kp LG(N8)  &kp LG(N9)  &kp LG(N0)  &kp BSPC
              &kp LSHFT  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none   &trans
              &kp LCTRL  &kp LS(LG(N1))  &kp LS(LG(N2))  &kp LS(LG(N3))  &kp LS(LG(N4))  &kp LS(LG(N5))  &kp LS(LG(N6))  &kp LS(LG(N7))  &kp LS(LG(N8))  &kp LS(LG(N9))  &kp LS(LG(N0)) &trans
                        &kp LGUI  &trans  &kp SPACE  &kp RET  &trans  &kp RALT
            >;
        };
    };
};
